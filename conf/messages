service.name = Manage your Self Assessment

error.title.prefix = Error:
govuk.suffix = GOV.UK

phaseBanner.tag = Beta
phaseBanner.message = This is a new service – your {0} will help us to improve it.
phaseBanner.linkText = feedback

service.lsp.caption = Late submission penalty point: {0} to {1}
service.lpp.caption = Late payment penalty: {0} to {1}

service.lpp.caption.first = First late payment penalty: {0} to {1}
service.lpp.caption.second = Second late payment penalty: {0} to {1}

service.lsp.multiple.caption = Late submission penalties: {0} to {1}
service.lpp.multiple.caption = Late payment penalties: {0} to {1}

# Appeal Start page
# ----------------------------------------------------------
appeal.start.header = Appeal a Self Assessment penalty
appeal.start.p1.lsp = To appeal a late submission penalty for Self Assessment, you’ll need to ask HMRC to look at your case again.
appeal.start.p1.lpp = To appeal a late payment penalty for Self Assessment, you’ll need to ask HMRC to look at your case again.
appeal.start.p2 = This service is for appealing penalties given for individual submissions.
appeal.start.h2 = Before you start
appeal.start.p3 = You’ll need:
appeal.start.li1.lsp = a reason why the quarterly update or tax return was not submitted by the due date (HMRC calls this ‘a reasonable excuse’)
appeal.start.li1.lpp = a reason why the tax payment was not made by the due date (HMRC calls this ‘a reasonable excuse’)
appeal.start.cessation.h2 = Income sources that have ceased
appeal.start.cessation.p1.individual = If you have received a penalty for an update period that started after the income source ceased, you may be able to get that point removed. To do this, you will need to confirm the dates that a particular income source was ceased to HMRC.
appeal.start.cessation.p2.individual = If you have received a penalty for more than one missing or late income source in the same update period, but only one of them was ceased before the update period started, that penalty point will not be removed and will remain active.
appeal.start.cessation.p1.agent = If your client has received a penalty for an update period that started after the income source ceased, they may be able to get that point removed. To do this, they will need to confirm the dates that a particular income source was ceased to HMRC.
appeal.start.cessation.p2.agent = If your client has received a penalty for more than one missing or late income source in the same update period, but only one of them was ceased before the update period started, that penalty point will not be removed and will remain active.
appeal.start.cessation.link = Cease an income source
appeal.start.evidence.h2 = Sending evidence with an appeal
appeal.start.li2 = the dates related to this reasonable excuse
appeal.start.li3 = details of why you did not appeal sooner
appeal.start.guidanceLink = Read the guidance about reasonable excuses (opens in new tab)
appeal.start.p4 = In some cases, you’ll be asked if you want to upload evidence to support your appeal. You should gather this evidence before you continue, as you will not be able to save this appeal and complete it later.
appeal.start.p5 = If you are not asked for extra evidence, this is because we don’t need any to make a decision in your particular case.
appeal.start.p6 = If we decide we need extra evidence after reviewing your appeal, we will contact you.
appeal.start.button.lsp = Start an appeal
appeal.start.button.lpp = Continue

# Review Appeal Start page
# ----------------------------------------------------------
reviewAppeal.start.header = Review an appeal decision
reviewAppeal.start.p1 = If you disagree with the decision of your penalty appeal, you can ask for your case to be reviewed again.
reviewAppeal.start.p2 = This service is for requesting a review for appeal decisions given for individual submissions.
reviewAppeal.start.h2 = Before you start
reviewAppeal.start.p3 = You’ll need to collect any evidence that you believe shows why the appeal decision was incorrect.
reviewAppeal.start.p4 = You will be asked to upload this evidence as part of this request to review.
reviewAppeal.start.p3.list = You’ll need:
reviewAppeal.start.p3.bullet1 = any evidence that you believe shows why the appeal decision was incorrect
reviewAppeal.start.p3.bullet2 = details of why you did not ask for a review sooner

# Reasonable excuse
# ----------------------------------------------------------
reasonableExcuses.headingAndTitleSubmissions = What was the reason for missing the submission deadline?
reasonableExcuses.headingAndTitlePayments = What was the reason for missing the payment deadline?
reasonableExcuses.hintText.standard = If more than one reason applies, choose the one that had the most direct impact on your ability to meet the deadline.
reasonableExcuses.hintText.agent = If more than one reason applies, choose the one that had the most direct impact on your client’s ability to meet the deadline.
reasonableExcuses.bereavement = Bereavement (someone died)
reasonableExcuses.cessation = Cessation of income source
reasonableExcuses.crime = Crime
reasonableExcuses.fireandflood = Fire or flood
reasonableExcuses.health = Serious or life-threatening ill health
reasonableExcuses.technicalIssue = Software or technology issues
reasonableExcuses.unexpectedHospital = Unexpected hospital stay
reasonableExcuses.lossOfEssentialStaff = TBC lossOfStaff
reasonableExcuses.other = Other reason that is not covered by any other category
reasonableExcuses.other.hint = You should only choose this if the reason is not covered by any of the other options.
reasonableExcuse.error.message = Select the reason for missing the deadline


# Joint appeal LPP
# ----------------------------------------------------------
jointAppeal.headingAndTitle = There are 2 penalties for this overdue tax charge
jointAppeal.radioHeading =  Do you intend to appeal both penalties for the same reason?
jointAppeal.radioHeading.review =  Do you want both appeal decisions to be reviewed at the same time?
jointAppeal.p1 = These are:
jointAppeal.l1 = £{0} first late payment penalty
jointAppeal.l2 = £{0} second late payment penalty
individual.jointAppeal.p2 = You can appeal both penalties at the same time if the reason why you did not make the tax payment is the same for each penalty.
individual.jointAppeal.p2.review = You can ask for these appeal decisions to be reviewed at the same time if your evidence applies to both of the original appeals.
agent.jointAppeal.p2 = You can appeal both penalties at the same time if the reason why your client did not make the tax payment is the same for each penalty.
agent.jointAppeal.p2.review = You can ask for these appeal decisions to be reviewed at the same time if your client’s evidence applies to both of the original appeals.
jointAppeal.error.required = Tell us if you intend to appeal both penalties for the same reason
jointAppeal.error.required.review = Tell us if you want both appeal decisions to be reviewed at the same time

# Multiple Appeals LPP
# ----------------------------------------------------------
multipleAppeals.headingAndTitle = The appeal will cover both penalties
multipleAppeals.headingAndTitle.review = This review will cover both appeal decisions
multipleAppeals.p1 = This allows you to enter appeal details once for penalties linked to the same charge. However, we will still review each penalty separately.
multipleAppeals.p1.review = This allows you to upload evidence once for both reviews. However, we will consider each review separately.

# Honesty declaration
# ----------------------------------------------------------
honestyDeclaration.headingAndTitle = Honesty declaration
honestyDeclaration.p1 = I confirm that:

clientSubmitted.honestyDeclaration.li.bereavement.lsp = because I was affected by someone’s death, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.bereavement.lpp = because I was affected by someone’s death, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.bereavement.lpp = because my client was affected by someone’s death, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.cessation.lsp = TBC cessation - I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.cessation.lpp = TBC cessation - I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.cessation.lpp = TBC cessation - they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.crime.lsp = because I was affected by a crime, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.crime.lpp = because I was affected by a crime, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.crime.lpp = because my client was affected by a crime, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.fireandflood.lsp = because of a fire or flood, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.fireandflood.lpp = because of a fire or flood, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.fireandflood.lpp = because my client was affected by a fire or flood, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.health.lsp = because of a serious or life-threatening health issue, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.health.lpp = because of a serious or life-threatening health issue, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.health.lpp = because my client had a serious or life-threatening health issue, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.technicalIssue.lsp = because of software or technology issues, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.technicalIssue.lpp = because of software or technology issues, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.technicalIssue.lpp = because my client was affected by software or technology issues, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.unexpectedHospital.lsp = because of a stay in hospital, I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.unexpectedHospital.lpp = because of a stay in hospital, I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.unexpectedHospital.lpp = because my client had an unexpected hospital stay, they were unable to make the payment due on {0}

clientSubmitted.honestyDeclaration.li.other.lsp = I was unable to send the submission due on {0}
clientSubmitted.honestyDeclaration.li.other.lpp = I was unable to make the payment due on {0}
agentPlanned.honestyDeclaration.li.other.lpp = my client was unable to make the payment due on {0}


clientPlanned.honestyDeclaration.li.bereavement.lsp = because my client was affected by someone’s death, they were unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.cessation.lsp = TBC cessation - they were unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.crime.lsp = because my client was affected by a crime, they were unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.fireandflood.lsp = because of a fire or flood, my client was unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.health.lsp = because my client had a serious or life-threatening health issue, they were unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.technicalIssue.lsp = because of software or technology issues, my client was unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.unexpectedHospital.lsp = because my client had an unexpected hospital stay, they were unable to send the submission due on {0}
clientPlanned.honestyDeclaration.li.other.lsp = my client was unable to send the submission due on {0}

agentPlanned.clientAffected.honestyDeclaration.li.bereavement.lsp = because my client was affected by someone’s death, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.cessation.lsp = TBC cessation - I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.crime.lsp = because my client was affected by a crime, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.fireandflood.lsp = because my client was affected by a fire or flood, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.health.lsp = because my client had a serious or life-threatening health issue, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.technicalIssue.lsp = because my client was affected by software or technology issues, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.unexpectedHospital.lsp = because my client had an unexpected hospital stay, I was unable to send the submission due on {0}
agentPlanned.clientAffected.honestyDeclaration.li.other.lsp = because of an issue affecting my client, I was unable to send the submission due on  {0}

agentPlanned.agentAffected.honestyDeclaration.li.bereavement.lsp = because I was affected by someone’s death, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.cessation.lsp = TBC cessation - I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.crime.lsp = because I was affected by a crime, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.fireandflood.lsp = because of a fire or flood, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.health.lsp = because I had a serious or life-threatening health issue, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.technicalIssue.lsp = because of software or technology issues, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.unexpectedHospital.lsp = because I had an unexpected hospital stay, I was unable to send the submission due on {0}
agentPlanned.agentAffected.honestyDeclaration.li.other.lsp = I was unable to send the submission due on {0}


honestyDeclaration.li.lpp = no one else was available to make the payment for me
agent.honestyDeclaration.li.lpp = no one else was available to make the payment for them
honestyDeclaration.li.hospital = the timing of the hospital stay was unexpected
honestyDeclaration.li.health = the timing of the health issue was unexpected
honestyDeclaration.li.2 = I will provide honest and accurate information in this appeal
honestyDeclaration.li.review = I confirm that I will provide honest and accurate information in this request for a review.

# When did the event happen page
# ----------------------------------------------------------
# Bereavement Messages
whenDidEventHappen.bereavement.headingAndTitle = When did the person die?
whenDidEventHappen.bereavement.date.error.invalid = The date must be a real date
whenDidEventHappen.bereavement.date.error.required.all = Enter the date when the person died
whenDidEventHappen.bereavement.date.error.required.two = The date must include a {0} and a {1}
whenDidEventHappen.bereavement.date.error.required = The date must include a {0}
whenDidEventHappen.bereavement.date.error.notInFuture = The date must be today or in the past

# Cessation Messages
whenDidEventHappen.cessation.headingAndTitle = TBC cessation
whenDidEventHappen.cessation.date.error.invalid = TBC
whenDidEventHappen.cessation.date.error.required.all = TBC
whenDidEventHappen.cessation.date.error.required.two = TBC
whenDidEventHappen.cessation.date.error.required = TBC
whenDidEventHappen.cessation.date.error.notInFuture = TBC

# Crime Messages
whenDidEventHappen.crime.headingAndTitle = When did the crime happen?
whenDidEventHappen.crime.date.error.invalid = The date of the crime must be a real date
whenDidEventHappen.crime.date.error.required.all = Enter the date of the crime
whenDidEventHappen.crime.date.error.required.two = The date of the crime must include a {0} and a {1}
whenDidEventHappen.crime.date.error.required = The date of the crime must include a {0}
whenDidEventHappen.crime.date.error.notInFuture = The date of the crime must be today or in the past

# Fire or Flood Messages
whenDidEventHappen.fireandflood.headingAndTitle = When did the fire or flood happen?
whenDidEventHappen.fireandflood.date.error.invalid = The date of the fire or flood must be a real date
whenDidEventHappen.fireandflood.date.error.required.all = Enter the date of the fire or flood
whenDidEventHappen.fireandflood.date.error.required.two = The date of the fire or flood must include a {0} and a {1}
whenDidEventHappen.fireandflood.date.error.required = The date of the fire or flood must include a {0}
whenDidEventHappen.fireandflood.date.error.notInFuture = The date of the fire or flood must be today or in the past

# Technical Error Messages
whenDidEventHappen.technicalIssue.headingAndTitle = When did the software or technology issues begin?
whenDidEventHappen.technicalIssue.date.error.invalid = The date the software or technology issues began must be a real date
whenDidEventHappen.technicalIssue.date.error.required.all = Tell us when the software or technology issues began
whenDidEventHappen.technicalIssue.date.error.required.two = The date the software or technology issues began must include a {0} and a {1}
whenDidEventHappen.technicalIssue.date.error.required = The date the software or technology issues began must include a {0}
whenDidEventHappen.technicalIssue.date.error.notInFuture = The date the software or technology issues began must be today or in the past

# Health Messages LSP
whenDidEventHappen.health.lsp.headingAndTitle = When did the health issue first stop you from meeting the submission deadline?
whenDidEventHappen.health.lpp.headingAndTitle = When did the health issue first stop you making the payment?
whenDidEventHappen.health.date.error.invalid = The date of the health issue must be a real date
whenDidEventHappen.health.date.error.required.all = Enter the date that the health issue began
whenDidEventHappen.health.date.error.required.two = The date of the health issue must include a {0} and a {1}
whenDidEventHappen.health.date.error.required = The date of the health issue must include a {0}
whenDidEventHappen.health.date.error.notInFuture = The date of the health issue must be today or in the past

# Health Messages LSP Agent
client.whenDidEventHappen.health.lsp.headingAndTitle = When did the health issue first stop your client from meeting the submission deadline?
client.whenDidEventHappen.health.lpp.headingAndTitle = When did the health issue first stop your client making the payment?


# Hospital Messages
whenDidEventHappen.unexpectedHospital.headingAndTitle = When did the hospital stay begin?
whenDidEventHappen.unexpectedHospital.date.error.invalid = The date that the hospital stay began must be a real date
whenDidEventHappen.unexpectedHospital.date.error.required.all = Enter the date that the hospital stay began
whenDidEventHappen.unexpectedHospital.date.error.required.two = The date that the hospital stay began must include a {0} and a {1}
whenDidEventHappen.unexpectedHospital.date.error.required = The date that the hospital stay began must include a {0}
whenDidEventHappen.unexpectedHospital.date.error.notInFuture = The date that the hospital stay began must be today or in the past

# Loss of Staff Messages
whenDidEventHappen.lossOfEssentialStaff.headingAndTitle = TBC lossOfStaff
whenDidEventHappen.lossOfEssentialStaff.date.error.invalid = TBC
whenDidEventHappen.lossOfEssentialStaff.date.error.required.all = TBC
whenDidEventHappen.lossOfEssentialStaff.date.error.required.two = TBC
whenDidEventHappen.lossOfEssentialStaff.date.error.required = TBC
whenDidEventHappen.lossOfEssentialStaff.date.error.notInFuture = TBC

# Other Messages - LSP
whenDidEventHappen.other.lsp.headingAndTitle = When did the issue first stop you meeting the submission deadline?
whenDidEventHappen.other.lsp.date.error.invalid = The date the issue first stopped you meeting the submission deadline must be a real date
whenDidEventHappen.other.lsp.date.error.required.all = Tell us when the issue first stopped you meeting the submission deadline
whenDidEventHappen.other.lsp.date.error.required.two = The date the issue first stopped you meeting the submission deadline must include a {0} and a {1}
whenDidEventHappen.other.lsp.date.error.required = The date the issue first stopped you meeting the submission deadline must include a {0}
whenDidEventHappen.other.lsp.date.error.notInFuture = The date the issue first stopped you meeting the submission deadline must be today or in the past

# Other Messages - LPP
whenDidEventHappen.other.lpp.headingAndTitle = When did the issue first stop you paying the tax bill by the due date?
whenDidEventHappen.other.lpp.date.error.invalid = The date the issue first stopped you paying the tax bill by the due date must be a real date
whenDidEventHappen.other.lpp.date.error.required.all = Tell us when the issue first stopped you paying the tax bill by the due date
whenDidEventHappen.other.lpp.date.error.required.two = The date the issue first stopped you paying the tax bill by the due date must include a {0} and a {1}
whenDidEventHappen.other.lpp.date.error.required = The date the issue first stopped you paying the tax bill by the due date must include a {0}
whenDidEventHappen.other.lpp.date.error.notInFuture = The date the issue first stopped you paying the tax bill by the due date must be today or in the past

# Agent - Other Messages - Client information issue
agent.whenDidEventHappen.other.clientInformation.headingAndTitle = When did the issue first stop your client getting information to you?
agent.whenDidEventHappen.other.clientInformation.date.error.invalid = The date when the issue first stopped your client getting information to you must be a real date
agent.whenDidEventHappen.other.clientInformation.date.error.required.all = Tell us when the issue first stopped your client getting information to you
agent.whenDidEventHappen.other.clientInformation.date.error.required.two = The date when the issue first stopped your client getting information to you must include a {0} and a {1}
agent.whenDidEventHappen.other.clientInformation.date.error.required = The date when the issue first stopped your client getting information to you must include a {0}
agent.whenDidEventHappen.other.clientInformation.date.error.notInFuture = The date when the issue first stopped your client getting information to you must be today or in the past

# Agent - Other Messages - LSP
agent.whenDidEventHappen.other.lsp.headingAndTitle = When did the issue first stop your client from meeting the submission deadline?
agent.whenDidEventHappen.other.lsp.date.error.invalid = The date when the issue first stopped your client from meeting the submission deadline must be a real date
agent.whenDidEventHappen.other.lsp.date.error.required.all = Tell us when the issue first stopped your client from meeting the submission deadline?
agent.whenDidEventHappen.other.lsp.date.error.required.two = The date when the issue first stopped your client from meeting the submission deadline must include a {0} and a {1}
agent.whenDidEventHappen.other.lsp.date.error.required = The date when the issue first stopped your client from meeting the submission deadline must include a {0}
agent.whenDidEventHappen.other.lsp.date.error.notInFuture = The date when the issue first stopped your client from meeting the submission deadline must be today or in the past

# Agent - Other Messages - LPP
agent.whenDidEventHappen.other.lpp.headingAndTitle = When did the issue first stop your client paying the tax bill by the due date?
agent.whenDidEventHappen.other.lpp.date.error.invalid = The date when the issue first stopped your client paying the tax bill by the due date must be a real date
agent.whenDidEventHappen.other.lpp.date.error.required.all = Tell us when the issue first stopped your client paying the tax bill by the due date
agent.whenDidEventHappen.other.lpp.date.error.required.two = The date when the issue first stopped your client paying the tax bill by the due date must include a {0} and a {1}
agent.whenDidEventHappen.other.lpp.date.error.required = The date when the issue first stopped your client paying the tax bill by the due date must include a {0}
agent.whenDidEventHappen.other.lpp.date.error.notInFuture = The date when the issue first stopped your client paying the tax bill by the due date must be today or in the past


# When did the event end page
# ----------------------------------------------------------
# Technical Issues content
whenDidEventEnd.technicalIssue.headingAndTitle = When did the software or technology issues end?
whenDidEventEnd.technicalIssue.end.date.error.required.all = Tell us when the software or technology issues ended
whenDidEventEnd.technicalIssue.end.date.error.required.two = The date the software or technology issues ended must include a {0} and a {1}
whenDidEventEnd.technicalIssue.end.date.error.required = The date the software or technology issues ended must include a {0}
whenDidEventEnd.technicalIssue.end.date.error.invalid = The date the software or technology issues ended must be a real date
whenDidEventEnd.technicalIssue.end.date.error.notInFuture = The date the software or technology issues ended must be today or in the past
whenDidEventEnd.technicalIssue.end.date.error.endDateLessThanStartDate = The date the software or technology issues ended must be {0} or later

whenDidEventEnd.unexpectedHospital.headingAndTitle = When did the hospital stay end?
whenDidEventEnd.unexpectedHospital.end.date.error.required.all = Tell us when the hospital stay ended
whenDidEventEnd.unexpectedHospital.end.date.error.required.two = The date that the hospital stay ended must include a {0} and a {1}
whenDidEventEnd.unexpectedHospital.end.date.error.required = The date that the hospital stay ended must include a {0}
whenDidEventEnd.unexpectedHospital.end.date.error.invalid = The date that the hospital stay ended must be a real date
whenDidEventEnd.unexpectedHospital.end.date.error.notInFuture = The date that the hospital stay ended must be today or in the past
whenDidEventEnd.unexpectedHospital.end.date.error.endDateLessThanStartDate = The date that the hospital stay ended must be {0} or later

# Late appeal page
# ----------------------------------------------------------
lateAppeal.headingAndTitle = This penalty point was issued more than {0} days ago
lateAppeal.headingAndTitle.lpp = This penalty was issued more than {0} days ago
lateAppeal.headingAndTitle.multiple = The penalties were issued more than {0} days ago
lateAppeal.headingAndTitle.review = The appeal decision was issued more than {0} days ago
lateAppeal.headingAndTitle.multiple.review = The appeal decisions were issued more than {0} days ago
lateAppeal.headingAndTitle.multiple.lpp = The penalties were issued more than {0} days ago
lateAppeal.headingAndTitle.review.lpp = The appeal decision was issued more than {0} days ago
lateAppeal.headingAndTitle.multiple.review.lpp = The appeal decisions were issued more than {0} days ago
lateAppeal.p1 = You usually need to appeal within {0} days of the date on the penalty notice.
lateAppeal.p1.multiple = You usually need to appeal within {0} days of the date on the penalty notice.
lateAppeal.p1.review = You usually need to ask for a review within {0} days of the date of the decision.
lateAppeal.p1.multiple.review = You usually need to ask for a review within {0} days of the date of the decision.
lateAppeal.charCount = Tell us why you could not appeal within {0} days
lateAppeal.charCount.multiple = Tell us why you could not appeal within {0} days
lateAppeal.charCount.review = Tell us why you have not asked for a review within {0} days
lateAppeal.charCount.multiple.review = Tell us why you have not asked for a review within {0} days
lateAppeal.error.required = You must provide some information about why you did not appeal sooner
lateAppeal.error.required.multiple = You must provide some information about why you did not appeal sooner
lateAppeal.error.required.review = You must provide some information about why you did not ask for a review sooner
lateAppeal.error.required.multiple.review = You must provide some information about why you did not ask for a review sooner
lateAppeal.error.length = Explain the reason in {0} characters or fewer
lateAppeal.error.regex = The text must contain only letters, numbers and standard special characters

# Missed deadline reason page - LSP
# ----------------------------------------------------------
missedDeadlineReason.lsp.headingAndTitle = Why was the submission deadline missed?
missedDeadlineReason.lsp.hint = We only need to know about this penalty. Other penalties should be appealed separately.
missedDeadlineReason.lsp.error.required = You must provide some information about why the deadline was missed
missedDeadlineReason.lsp.error.length = Explain the reason in {0} characters or fewer
missedDeadlineReason.lsp.error.regex = The text must contain only letters, numbers and standard special characters

# Missed deadline reason for review page - LSP
# ----------------------------------------------------------
missedDeadlineReason.lsp.review.headingAndTitle = Why are you asking us to review this decision?
missedDeadlineReason.lsp.review.hint = Briefly explain why you feel that the original appeal decision was incorrect.
missedDeadlineReason.lsp.error.review.required = You must provide some information about why you are asking us to review this decision

# Missed deadline reason page - LPP
# ----------------------------------------------------------
missedDeadlineReason.lpp.headingAndTitle = Why was the payment late?
missedDeadlineReason.lpp.hint = We only need to know about this penalty. Any other penalty related to this update period should be appealed separately.
missedDeadlineReason.lpp.error.required = You must provide some information about why the payment was late
missedDeadlineReason.lpp.error.length = Explain the reason in {0} characters or fewer
missedDeadlineReason.lpp.error.regex = The text must contain only letters, numbers and standard special characters

missedDeadlineReason.lpp.headingAndTitle.multiple = Why was the payment late?
missedDeadlineReason.lpp.hint.multiple = We only need to know about these penalties. Any other penalties should be appealed separately.
missedDeadlineReason.lpp.error.required.multiple = You must provide some information about why the payment was late

# Missed deadline reason for review page - LPP
# ----------------------------------------------------------
missedDeadlineReason.lpp.review.headingAndTitle = Why are you asking us to review this decision?
missedDeadlineReason.lpp.review.hint = Briefly explain why you feel that the original appeal decision was incorrect.
missedDeadlineReason.lpp.error.review.required = You must provide some information about why you are asking us to review this decision

missedDeadlineReason.lpp.review.headingAndTitle.multiple = Why are you asking us to review these appeal decisions?
missedDeadlineReason.lpp.review.hint.multiple = Briefly explain why you feel that the original appeal decisions were incorrect.
missedDeadlineReason.lpp.error.review.required.multiple = You must provide some information about why you are asking us to review these decisions



# Has the crime been reported page
# ----------------------------------------------------------
crime.headingAndTitle = Has this crime been reported to the police?
crime.yes = Yes
crime.no = No
crime.unknown = I do not know
crime.error.required = Tell us if the police have been told about the crime
crime.error.invalid = Tell us if the police have been told about the crime

# Extra evidence page
# ----------------------------------------------------------
extraEvidence.headingAndTitle = Do you want to upload evidence to support your appeal?
extraEvidence.headingAndTitle.multiple = Do you want to upload evidence to support your appeal?
extraEvidence.headingAndTitle.review = Do you want to upload evidence to support this review?
extraEvidence.headingAndTitle.multiple.review = Do you want to upload evidence to support this review?
extraEvidence.yes = Yes
extraEvidence.no = No
extraEvidence.hint = We will still review your appeal if you do not upload evidence.
extraEvidence.hint.multiple = We will still review your appeal if you do not upload evidence.
extraEvidence.hint.review = Uploading evidence is optional. We will still review the original appeal decision if you do not upload evidence.
extraEvidence.hint.multiple.review = Uploading evidence is optional. We will still review the original appeal decisions if you do not upload evidence.
extraEvidence.error.required = Tell us if you want to upload evidence to support your appeal
extraEvidence.error.required.review = Tell us if you want to upload evidence to support this review
extraEvidence.error.invalid = Tell us if you want to upload evidence to support your appeal
extraEvidence.error.invalid.review = Tell us if you want to upload evidence to support this review

# Check your answers page
# ----------------------------------------------------------
checkYourAnswers.headingAndTitle = Check your answers
checkYourAnswers.appealDetails.h2 = Appeal details
checkYourAnswers.appealDetails.h2.review = Details of review

agent.checkYourAnswers.whoPlannedToSubmit.key = Before the deadline, who planned to send the submission?
agent.checkYourAnswers.whoPlannedToSubmit.value.agent = I did
agent.checkYourAnswers.whoPlannedToSubmit.value.client = My client did
agent.checkYourAnswers.whoPlannedToSubmit.change.hidden = before the deadline, who planned to send the submission

agent.checkYourAnswers.whatCausedYouToMissDeadline.key = What caused you to miss the deadline?
agent.checkYourAnswers.whatCausedYouToMissDeadline.value.agent = Something else happened to delay me
agent.checkYourAnswers.whatCausedYouToMissDeadline.value.client = My client did not get information to me on time
agent.checkYourAnswers.whatCausedYouToMissDeadline.change.hidden = what caused you to miss the deadline

checkYourAnswers.jointAppeal.key = Do you intend to appeal both penalties for the same reason?
checkYourAnswers.jointAppeal.change.hidden = do you intend to appeal both penalties for the same reason
checkYourAnswers.jointAppeal.key.review = Do you want both appeal decisions to be reviewed at the same time?
checkYourAnswers.jointAppeal.change.hidden.review = do you want both appeal decisions to be reviewed at the same time

checkYourAnswers.reasonableExcuse.key = Reason for missing the submission deadline
checkYourAnswers.reasonableExcuse.change.hidden = reason for missing the submission deadline
checkYourAnswers.reasonableExcuse.value.bereavement = Bereavement (someone died)
checkYourAnswers.reasonableExcuse.value.cessation = Cessation of income source
checkYourAnswers.reasonableExcuse.value.crime = Crime
checkYourAnswers.reasonableExcuse.value.fireandflood = Fire or flood
checkYourAnswers.reasonableExcuse.value.health = Serious or life-threatening ill health
checkYourAnswers.reasonableExcuse.value.technicalIssue = Software or technology issues
checkYourAnswers.reasonableExcuse.value.unexpectedHospital = Unexpected hospital stay
checkYourAnswers.reasonableExcuse.value.lossOfEssentialStaff = TBC lossOfStaff
checkYourAnswers.reasonableExcuse.value.other = Other reason that is not covered by any other category

checkYourAnswers.crimeReported.key = Has this crime been reported to the police?
checkYourAnswers.crimeReported.change.hidden = has this crime been reported to the police

checkYourAnswers.hasHospitalStayEnded.unexpectedHospital.key = Has the hospital stay ended?
checkYourAnswers.hasHospitalStayEnded.unexpectedHospital.change.hidden = has the hospital stay ended

checkYourAnswers.whenDidEventHappen.bereavement.key =  When did the person die?
checkYourAnswers.whenDidEventHappen.bereavement.change.hidden =  when did the person die
checkYourAnswers.whenDidEventHappen.cessation.key = TBC cessation
checkYourAnswers.whenDidEventHappen.cessation.change.hidden = TBC cessation
checkYourAnswers.whenDidEventHappen.crime.key =  When did the crime happen?
checkYourAnswers.whenDidEventHappen.crime.change.hidden =  when did the crime happen
checkYourAnswers.whenDidEventHappen.fireandflood.key =  When did the fire or flood happen?
checkYourAnswers.whenDidEventHappen.fireandflood.change.hidden =  when did the fire or flood happen
checkYourAnswers.whenDidEventHappen.health.key = When did the health issue first stop you making the payment?
checkYourAnswers.whenDidEventHappen.health.change.hidden = when did the health issue first stop you making the payment
checkYourAnswers.whenDidEventHappen.technicalIssue.key = When did the software or technology issues begin?
checkYourAnswers.whenDidEventHappen.technicalIssue.change.hidden = when did the software or technology issues begin
checkYourAnswers.whenDidEventHappen.unexpectedHospital.key = When did the hospital stay begin?
checkYourAnswers.whenDidEventHappen.unexpectedHospital.change.hidden = when did the hospital stay begin
checkYourAnswers.whenDidEventHappen.lossOfEssentialStaff.key = TBC lossOfStaff
checkYourAnswers.whenDidEventHappen.lossOfEssentialStaff.change.hidden = TBC lossOfStaff
checkYourAnswers.whenDidEventHappen.other.key = TBC other
checkYourAnswers.whenDidEventHappen.other.change.hidden = TBC other

checkYourAnswers.whenDidTheEventEnd.technicalIssue.key = When did the software or technology issues end?
checkYourAnswers.whenDidTheEventEnd.technicalIssue.change.hidden = when did the software or technology issues end
checkYourAnswers.whenDidTheEventEnd.unexpectedHospital.key = When did the hospital stay end?
checkYourAnswers.whenDidTheEventEnd.unexpectedHospital.change.hidden = when did the hospital stay end

checkYourAnswers.lateAppeal.key = Reason for appealing after {0} days
checkYourAnswers.lateAppeal.change.hidden = reason for appealing after {0} days

checkYourAnswers.missedDeadlineReason.lpp.key = Why was the payment late?
checkYourAnswers.missedDeadlineReason.lpp.change.hidden = why was the payment late
checkYourAnswers.missedDeadlineReason.lsp.key = Why was the submission deadline missed?
checkYourAnswers.missedDeadlineReason.lsp.change.hidden = why was the submission deadline missed
checkYourAnswers.missedDeadlineReason.review.key = Why are you asking us to review this decision?
checkYourAnswers.missedDeadlineReason.review.change.hidden = why are you asking us to review this decision
checkYourAnswers.missedDeadlineReason.joint.review.key = Why are you asking us to review these appeal decisions?
checkYourAnswers.missedDeadlineReason.joint.review.change.hidden = why are you asking us to review these appeal decisions

checkYourAnswers.uploadedDocuments.key = Evidence to support this appeal
checkYourAnswers.uploadedDocuments.change.hidden = evidence to support this appeal
checkYourAnswers.uploadedDocuments.key.review = Evidence to support this review
checkYourAnswers.uploadedDocuments.change.hidden.review = evidence to support this review

checkYourAnswers.declaration.h2 = Declaration
checkYourAnswers.declaration.text.1 = By submitting this appeal, you are making a legal declaration that the information is correct and complete to the best of your knowledge.
checkYourAnswers.declaration.text.1.review = By submitting this request for a review, you are making a legal declaration that the information is correct and complete to the best of your knowledge.
checkYourAnswers.declaration.text.2 = A false declaration can result in prosecution.

checkYourAnswers.extraEvidence.key = Do you want to upload evidence to support your appeal?
checkYourAnswers.extraEvidence.change.hidden = do you want to upload evidence to support your appeal
checkYourAnswers.extraEvidence.key.review = Do you want to upload evidence to support this review?
checkYourAnswers.extraEvidence.change.hidden.review = do you want to upload evidence to support this review?

checkYourAnswers.acceptAndSend = Accept and send

# Appeal Confirmation page
# ----------------------------------------------------------

appealConfirmation.headingAndTitle = Appeal received
appealConfirmation.typeAndPeriod = {0}: {1} tax year
appealConfirmation.p1 = You do not need a reference number.
appealConfirmation.p2.client = Your appeal has been logged against your National Insurance number. Please quote this number if you call HMRC about this appeal.
appealConfirmation.p2.agent = This appeal has been logged against your client’s National Insurance number. Please quote this number if you call HMRC about this appeal.
appealConfirmation.viewOrPrint = View or print your appeal details (opens in new tab)
appealConfirmation.whatHappensNext.h2 = What happens next
appealConfirmation.whatHappensNext.p1 = We aim to make decisions about appeals within 45 days.
appealConfirmation.whatHappensNext.p2.client = When a decision has been made, you’ll be notified about the outcome of this appeal and the reasons for our decision.
appealConfirmation.whatHappensNext.p2.agent =  When a decision has been made, your client will be notified about the outcome of this appeal and the reasons for our decision.
appealConfirmation.whatHappensNext.link1.client = Return to your Self Assessment penalties
appealConfirmation.whatHappensNext.link1.agent = Return to your client’s Self Assessment penalties
appealConfirmation.whatHappensNext.link2.client = View your Self Assessment account
appealConfirmation.whatHappensNext.link2.agent = View your client’s Self Assessment account

appealConfirmation.feedback.h2 = Before you go
appealConfirmation.feedback.p = Your feedback helps us make our service better.
appealConfirmation.feedback.link = Take a short survey
appealConfirmation.feedback.link.text = to share your feedback on this service.
appealConfirmation.viewOrPrint.review = View or print details of this review (opens in new tab)

appealConfirmation.review.headingAndTitle = Review request received
appealConfirmation.p2.client.review = This request for a review has been logged against your National Insurance number. Please quote this number if you call HMRC about this review.
appealConfirmation.p2.agent.review = This request for a review has been logged against your client’s National Insurance number. Please quote this number if you call HMRC about this review.
appealConfirmation.whatHappensNext.p1.review = We aim to complete reviews within 45 days.
appealConfirmation.whatHappensNext.p2.client.review = When a decision has been made, you’ll be notified about the outcome of the review and the reasons for our decision.
appealConfirmation.whatHappensNext.p2.agent.review =  When a decision has been made, your client will be notified about the outcome of the review and the reasons for our decision.

# View appeal details page
# -----------------------------------------------------------
viewAppealDetails.headingAndTitle = Appeal details
viewAppealDetails.headingAndTitle.review = Review details
viewAppealDetails.ni = National Insurance number
viewAppealDetails.penaltyAppealed = Penalty appealed
viewAppealDetails.penaltyAppealed.multiple = Penalties appealed
viewAppealDetails.appealDate = Appeal date
viewAppealDetails.appealDate.review = Review request sent
viewAppealDetails.warn.1 = Print or download this page if you want to keep it.
viewAppealDetails.warn.2 = You will not be able to return to these appeal details later.
viewAppealDetails.warn.2.review = You will not be able to return to these review details later.
viewAppealDetails.printThisPage = Print this page

# Who Planned to Submit
# ----------------------------------------------------------
agents.whoPlannedToSubmit.headingAndTitle = Before the deadline, who planned to send the submission?
agents.whoPlannedToSubmit.agent = I did
agents.whoPlannedToSubmit.client = My client did
agents.whoPlannedToSubmit.error.required = Tell us who planned to send the submission
agents.whoPlannedToSubmit.error.invalid = Tell us who planned to send the submission

# Agents What caused you to miss the deadline?
# ----------------------------------------------------------
agents.whatCausedYouToMissTheDeadline.headingAndTitle = What caused you to miss the deadline?
agents.whatCausedYouToMissTheDeadline.client = My client did not get information to me on time
agents.whatCausedYouToMissTheDeadline.agent = Something else happened to delay me
agents.whatCausedYouToMissTheDeadline.error.required = Tell us the reason the return was submitted late
agents.whatCausedYouToMissTheDeadline.error.invalid = Tell us the reason the return was submitted late

# Date input fields
# ----------------------------------------------------------
date.day = Day
date.month = Month
date.year = Year

# NonJS File Upload Page
# ----------------------------------------------------------
uploadEvidence.nonJs.headingAndTitle = Evidence to support this appeal
uploadEvidence.nonJs.headingAndTitle.review = Upload evidence
uploadEvidence.nonJs.p1 = Use this page to upload any evidence to help us review this penalty.
uploadEvidence.nonJs.p1.joint = Use this page to upload any evidence to help us review these penalties.
uploadEvidence.nonJs.p1.review = Use this page to upload any evidence to help us review the appeal decision.
uploadEvidence.nonJs.p1.joint.review = Use this page to upload any evidence to help us review the appeal decisions.
uploadEvidence.nonJs.p2.lsp = Evidence might include any documents or letters that show why the submission deadline was missed.
uploadEvidence.nonJs.p2.lsp.review = Evidence might include any documents or letters that show why the submission was sent late.
uploadEvidence.nonJs.p2.lpp = Evidence might include any documents or letters that show why the payment deadline was missed.
uploadEvidence.nonJs.p2.lpp.review = Evidence might include any documents or letters that show why the tax bill was paid late.
uploadEvidence.nonJs.p3 = You can upload up to {0} files.
uploadEvidence.nonJs.p4 = Each file must be smaller than {0}MB.
uploadEvidence.nonJs.label = Select a file

# NonJS File Upload Page
# ----------------------------------------------------------
uploadEvidence.typesOfFile.heading = Types of file you can upload
uploadEvidence.typesOfFile.p1 = These file types are allowed:
uploadEvidence.typesOfFile.li.1 = image (.jpg, .jpeg, .png or .tiff)
uploadEvidence.typesOfFile.li.2 = PDF (.pdf)
uploadEvidence.typesOfFile.li.3 = email (.txt or .msg)
uploadEvidence.typesOfFile.li.4 = Microsoft (Word, Excel or PowerPoint)
uploadEvidence.typesOfFile.li.5 = Open Document Format (ODF)

# Synchronous Upscan Error
# ----------------------------------------------------------
uploadEvidence.error.fileTooSmall = The selected file is empty. Choose another file.
uploadEvidence.error.fileTooLarge = The selected file must be smaller than {0}MB. Choose another file.
uploadEvidence.error.noFileSpecified = Select a file.
uploadEvidence.error.unableToUpload = The selected file could not be uploaded. Choose another file.

# Asynchronous Upscan Failure
# ----------------------------------------------------------
uploadEvidence.error.QUARANTINE = The selected file contains a virus. Choose another file.
uploadEvidence.error.REJECTED = The selected file must be a JPG, PNG, TIFF, PDF, TXT, MSG, Word, Excel, Powerpoint or Open Document Format (ODF). Choose another file.
uploadEvidence.error.INVALID_FILENAME = Filenames can only contain upper and lower case letters, digits from 0-9, hyphens, underscores and full stops.

# NonJs Upscan Check Answers (Add Another file) page
# ----------------------------------------------------------
uploadCheckAnswers.nonJs.headingAndTitle.plural = You have uploaded {0} files
uploadCheckAnswers.nonJs.headingAndTitle.singular = You have uploaded {0} file
uploadCheckAnswers.nonJs.summaryKey = File {0}
uploadCheckAnswers.nonJs.addAnother.legend = Do you want to upload another file?
uploadCheckAnswers.nonJs.addAnother.error.required = Tell us if you want to upload another file
uploadCheckAnswers.nonJs.addAnother.error.invalid = Tell us if you want to upload another file

# NonJs Confirm Remove File page
# ----------------------------------------------------------
uploadRemoveFile.nonJs.headingAndTitle = Are you sure you want to remove file {0}?
uploadRemoveFile.nonJs.hint = Filename: {0}
uploadRemoveFile.nonJs.error.required = Select yes if you want to remove this file
uploadRemoveFile.nonJs.error.invalid = Select yes if you want to remove this file

# Single Appeal Confirmation
# ----------------------------------------------------------
single.appeal.headingAndTitle = The appeal will cover a single penalty
single.appeal.headingAndTitle.review = This review will cover a single penalty
single.appeal.which.penalty.first = You have chosen to appeal the £{0} first penalty for late payment.
single.appeal.which.penalty.second = You have chosen to appeal the £{0} second penalty for late payment.
single.appeal.which.penalty.first.review = You have asked for the appeal decision for the £{0} first late payment penalty to be reviewed.
single.appeal.which.penalty.second.review = You have asked for the appeal decision for the £{0} second late payment penalty to be reviewed.
single.appeal.can.still.appeal.other = You can still appeal other penalties separately.
single.appeal.can.still.appeal.other.review = You can still ask for other penalties to be reviewed separately.

# Has Hospital Stay Ended
# ----------------------------------------------------------
hasHospitalStayEnded.headingAndTitle = Has the hospital stay ended?
hasHospitalStayEnded.error.required = Tell us if the hospital stay has ended

# Months
# -----------------------------------------------------------
month.1 = January
month.2 = February
month.3 = March
month.4 = April
month.5 = May
month.6 = June
month.7 = July
month.8 = August
month.9 = September
month.10 = October
month.11 = November
month.12 = December


common.warning = Warning
common.dateHint = For example, 12 3 2018
common.continue = Continue
common.acceptAndContinue = Accept and continue
common.or = or
common.yes = Yes
common.no = No
common.remove = Remove
common.change = Change

